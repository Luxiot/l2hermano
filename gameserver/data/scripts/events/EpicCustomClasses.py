# ===========================================
# CLASES √âPICAS PERSONALIZADAS - L2 HERMANOS
# ===========================================
# Sistema de clases √©picas √∫nicas para L2 Hermanos
# Epic unique classes system for L2 Hermanos

import sys
from java.util import Calendar
from l2jfrozen.gameserver.model.quest import State
from l2jfrozen.gameserver.model.quest import QuestState
from l2jfrozen.gameserver.model.quest import Quest as JQuest
from l2jfrozen.gameserver.datatables import SkillTable
from l2jfrozen.gameserver.model.actor.instance import L2PcInstance
from l2jfrozen.gameserver.network.serverpackets import NpcHtmlMessage
from l2jfrozen.gameserver.network.serverpackets import SystemMessage
from l2jfrozen.gameserver.network.serverpackets import CreatureSay
from l2jfrozen.gameserver.GameServer import GameServer

class EpicCustomClasses(JQuest):
    def __init__(self, id, name, descr):
        JQuest.__init__(self, id, name, descr)
        self.epicClasses = {
            "GUERRERO_EPICO": {
                "name": "Guerrero √âpico",
                "description": "Guerrero con poderes √©picos √∫nicos",
                "skills": [1001, 1002, 1003, 1004, 1005],
                "transform": 1001,
                "buffs": [1085, 1086, 1087, 1044, 1045]
            },
            "MAGO_EPICO": {
                "name": "Mago √âpico",
                "description": "Mago con magia √©pica destructiva",
                "skills": [2001, 2002, 2003, 2004, 2005],
                "transform": 2001,
                "buffs": [1085, 1086, 1087, 1044, 1045]
            },
            "ARQUERO_EPICO": {
                "name": "Arquero √âpico",
                "description": "Arquero con precisi√≥n √©pica",
                "skills": [3001, 3002, 3003, 3004, 3005],
                "transform": 3001,
                "buffs": [1085, 1086, 1087, 1044, 1045]
            },
            "PICARO_EPICO": {
                "name": "P√≠caro √âpico",
                "description": "P√≠caro con sigilo √©pico",
                "skills": [4001, 4002, 4003, 4004, 4005],
                "transform": 4001,
                "buffs": [1085, 1086, 1087, 1044, 1045]
            }
        }
        
    def onAdvEvent(self, event, npc, player):
        if event == "mostrar_clases_epicas":
            return self.mostrarClasesEpicas(player)
        elif event == "convertir_guerrero_epico":
            return self.convertirAClaseEpica(player, "GUERRERO_EPICO")
        elif event == "convertir_mago_epico":
            return self.convertirAClaseEpica(player, "MAGO_EPICO")
        elif event == "convertir_arquero_epico":
            return self.convertirAClaseEpica(player, "ARQUERO_EPICO")
        elif event == "convertir_picaro_epico":
            return self.convertirAClaseEpica(player, "PICARO_EPICO")
        elif event == "activar_transformacion_epica":
            return self.activarTransformacionEpica(player)
        elif event == "desactivar_transformacion_epica":
            return self.desactivarTransformacionEpica(player)
        return None
    
    def mostrarClasesEpicas(self, player):
        html = "<html><body>"
        html += "<center><font color=\"LEVEL\">¬°¬°¬° CLASES √âPICAS DE L2 HERMANOS !!!</font></center><br>"
        html += "<center><font color=\"LEVEL\">¬°¬°¬° EPIC CLASSES OF L2 HERMANOS !!!</font></center><br><br>"
        
        html += "<font color=\"LEVEL\">üåü CLASES √âPICAS DISPONIBLES / EPIC CLASSES AVAILABLE:</font><br><br>"
        
        for classKey, classInfo in self.epicClasses.items():
            html += "<font color=\"LEVEL\">" + classInfo["name"] + "</font><br>"
            html += "<font color=\"WHITE\">" + classInfo["description"] + "</font><br>"
            html += "<button value=\"Convertir a " + classInfo["name"] + "\" action=\"bypass -h Quest EpicCustomClasses convertir_" + classKey.lower() + "\" width=200 height=25 back=\"L2UI_ct1.button_df\" fore=\"L2UI_ct1.button_df\"><br><br>"
        
        html += "<br><font color=\"LEVEL\">üéØ TRANSFORMACIONES √âPICAS / EPIC TRANSFORMATIONS:</font><br>"
        html += "<button value=\"Activar Transformaci√≥n √âpica\" action=\"bypass -h Quest EpicCustomClasses activar_transformacion_epica\" width=200 height=25 back=\"L2UI_ct1.button_df\" fore=\"L2UI_ct1.button_df\"><br>"
        html += "<button value=\"Desactivar Transformaci√≥n √âpica\" action=\"bypass -h Quest EpicCustomClasses desactivar_transformacion_epica\" width=200 height=25 back=\"L2UI_ct1.button_df\" fore=\"L2UI_ct1.button_df\"><br>"
        
        html += "<br><font color=\"LEVEL\">üèÜ BENEFICIOS √âPICOS / EPIC BENEFITS:</font><br>"
        html += "‚Ä¢ +50% de da√±o / +50% damage<br>"
        html += "‚Ä¢ +50% de velocidad de ataque / +50% attack speed<br>"
        html += "‚Ä¢ +50% de velocidad de movimiento / +50% movement speed<br>"
        html += "‚Ä¢ +50% de regeneraci√≥n / +50% regeneration<br>"
        html += "‚Ä¢ Habilidades √©picas √∫nicas / Unique epic skills<br>"
        html += "‚Ä¢ Transformaci√≥n √©pica / Epic transformation<br>"
        
        html += "<br><font color=\"LEVEL\">¬°¬°¬° CONVI√âRTETE EN UNA LEYENDA √âPICA !!!</font><br>"
        html += "<font color=\"LEVEL\">¬°¬°¬° BECOME AN EPIC LEGEND !!!</font><br>"
        
        html += "</body></html>"
        
        reply = NpcHtmlMessage(1)
        reply.setHtml(html)
        player.sendPacket(reply)
        return None
    
    def convertirAClaseEpica(self, player, classKey):
        if classKey not in self.epicClasses:
            return "Clase √©pica no encontrada."
        
        classInfo = self.epicClasses[classKey]
        
        # Dar habilidades √©picas
        for skillId in classInfo["skills"]:
            player.addSkill(skillId, 1)
        
        # Dar buffs √©picos
        for buffId in classInfo["buffs"]:
            player.addSkill(buffId, 3)
        
        # Dar transformaci√≥n √©pica
        player.setTransformation(classInfo["transform"])
        
        # Mensaje √©pico
        player.sendMessage("¬°¬°¬° TE HAS CONVERTIDO EN " + classInfo["name"].upper() + " !!!")
        player.sendMessage("¬°¬°¬° YOU HAVE BECOME " + classInfo["name"].upper() + " !!!")
        player.sendMessage("¬°Has recibido habilidades √©picas √∫nicas!")
        player.sendMessage("You have received unique epic skills!")
        
        # Anuncio √©pico
        self.announceToAll(player.getName() + " se ha convertido en " + classInfo["name"] + "!")
        self.announceToAll(player.getName() + " has become " + classInfo["name"] + "!")
        
        return "¬°Te has convertido en " + classInfo["name"] + "!"
    
    def activarTransformacionEpica(self, player):
        # Activar transformaci√≥n √©pica
        player.setTransformation(1001)  # Transformaci√≥n √©pica base
        
        # Buffs √©picos adicionales
        epicBuffs = [1085, 1086, 1087, 1044, 1045, 1047, 1048, 1049, 1059, 1062]
        for buffId in epicBuffs:
            player.addSkill(buffId, 3)
        
        # Mensaje √©pico
        player.sendMessage("¬°¬°¬° TRANSFORMACI√ìN √âPICA ACTIVADA !!!")
        player.sendMessage("¬°¬°¬° EPIC TRANSFORMATION ACTIVATED !!!")
        player.sendMessage("¬°Has recibido poderes √©picos incre√≠bles!")
        player.sendMessage("You have received incredible epic powers!")
        
        # Anuncio √©pico
        self.announceToAll(player.getName() + " ha activado su transformaci√≥n √©pica!")
        self.announceToAll(player.getName() + " has activated their epic transformation!")
        
        return "¬°Transformaci√≥n √©pica activada!"
    
    def desactivarTransformacionEpica(self, player):
        # Desactivar transformaci√≥n √©pica
        player.setTransformation(0)
        
        # Mensaje √©pico
        player.sendMessage("¬°¬°¬° TRANSFORMACI√ìN √âPICA DESACTIVADA !!!")
        player.sendMessage("¬°¬°¬° EPIC TRANSFORMATION DEACTIVATED !!!")
        player.sendMessage("¬°Has vuelto a tu forma normal!")
        player.sendMessage("You have returned to your normal form!")
        
        return "¬°Transformaci√≥n √©pica desactivada!"
    
    def announceToAll(self, message):
        from l2jfrozen.gameserver.network.serverpackets import CreatureSay
        from l2jfrozen.gameserver.model.actor.instance import L2PcInstance
        from l2jfrozen.gameserver.GameServer import GameServer
        
        for player in GameServer.getInstance().getAllPlayers():
            if player and player.isOnline():
                player.sendPacket(CreatureSay(0, 1, "CLASES √âPICAS", message))

# Crear instancia del sistema de clases √©picas
CLASES_EPICAS_PERSONALIZADAS = EpicCustomClasses(-1, "ClasesEpicasPersonalizadas", "Sistema de Clases √âpicas Personalizadas")

# Registrar el sistema
CLASES_EPICAS_PERSONALIZADAS.addStartNpc(30006)  # Tienda GM
CLASES_EPICAS_PERSONALIZADAS.addTalkId(30006)



